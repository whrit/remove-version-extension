{"version":3,"file":"extension.js","mappings":"8bAAA,eAEA,oBAAyBA,GACrB,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,qCAAqC,IAAY,EAAD,gCAC7F,MAAMC,EAASH,EAAOI,OAAOC,iBAC7B,GAAIF,EAAQ,CACR,MAAMG,EAAWH,EAAOG,SACxB,GAAIA,EAASC,SAASC,SAAS,oBAAqB,CAChD,MACMC,EADOH,EAASI,UACDC,QAAQ,YAAa,UACpCR,EAAOS,MAAKC,IACd,MAAMC,EAAQ,IAAId,EAAOe,SAAS,EAAG,GAC/BC,EAAM,IAAIhB,EAAOe,SAAST,EAASW,UAAW,GACpDJ,EAAYF,QAAQ,IAAIX,EAAOkB,MAAMJ,EAAOE,GAAMP,EAAQ,IAE9DT,EAAOI,OAAOe,uBAAuB,2C,MAErCnB,EAAOI,OAAOgB,iBAAiB,uC,MAGnCpB,EAAOI,OAAOgB,iBAAiB,0BAEvC,MAEAtB,EAAQuB,cAAcC,KAAKvB,EAC/B,EAEA,wBAA8B,C,UC3B9BwB,EAAOC,QAAUC,QAAQ,S,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":[".././src/extension.ts","../external commonjs \"vscode\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\n\nexport function activate(context: vscode.ExtensionContext) {\n    let disposable = vscode.commands.registerCommand('extension.removeVersionSpecifiers', async () => {\n        const editor = vscode.window.activeTextEditor;\n        if (editor) {\n            const document = editor.document;\n            if (document.fileName.endsWith('requirements.txt')) {\n                const text = document.getText();\n                const newText = text.replace(/==[\\d.]+/g, '');\n                await editor.edit(editBuilder => {\n                    const start = new vscode.Position(0, 0);\n                    const end = new vscode.Position(document.lineCount, 0);\n                    editBuilder.replace(new vscode.Range(start, end), newText);\n                });\n                vscode.window.showInformationMessage('Version specifiers removed successfully.');\n            } else {\n                vscode.window.showErrorMessage('Please open a requirements.txt file.');\n            }\n        } else {\n            vscode.window.showErrorMessage('No active editor found.');\n        }\n    });\n\n    context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","editor","window","activeTextEditor","document","fileName","endsWith","newText","getText","replace","edit","editBuilder","start","Position","end","lineCount","Range","showInformationMessage","showErrorMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}